//
// Generated by Bluespec Compiler, version 2017.04.beta1 (build 35065, 2017-04-17)
//
// On Tue Jun 19 14:36:21 IST 2018
//
//
// Ports:
// Name                         I/O  size props
// RDY_tx_put                     O     1 reg
// rx_get                         O    32
// RDY_rx_get                     O     1
// deq_serial_get                 O    32 reg
// RDY_deq_serial_get             O     1 reg
// RDY_enq_serial_put             O     1
// instnum                        I     3 unused
// CLK_clkinB                     I     1 clock
// RST_N_reset_B                  I     1 reset
// CLK_clkinA                     I     1 clock
// reset_A                        I     1 reset
// tx_put                         I    32 reg
// enq_serial_put                 I    32
// EN_tx_put                      I     1
// EN_enq_serial_put              I     1
// EN_rx_get                      I     1
// EN_deq_serial_get              I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkInterFPGA_LVDS(instnum,
			CLK_clkinB,
			RST_N_reset_B,
			CLK_clkinA,
			reset_A,

			tx_put,
			EN_tx_put,
			RDY_tx_put,

			EN_rx_get,
			rx_get,
			RDY_rx_get,

			EN_deq_serial_get,
			deq_serial_get,
			RDY_deq_serial_get,

			enq_serial_put,
			EN_enq_serial_put,
			RDY_enq_serial_put);
  input  [2 : 0] instnum;
  input  CLK_clkinB;
  input  RST_N_reset_B;
  input  CLK_clkinA;
  input  reset_A;

  // action method tx_put
  input  [31 : 0] tx_put;
  input  EN_tx_put;
  output RDY_tx_put;

  // actionvalue method rx_get
  input  EN_rx_get;
  output [31 : 0] rx_get;
  output RDY_rx_get;

  // actionvalue method deq_serial_get
  input  EN_deq_serial_get;
  output [31 : 0] deq_serial_get;
  output RDY_deq_serial_get;

  // action method enq_serial_put
  input  [31 : 0] enq_serial_put;
  input  EN_enq_serial_put;
  output RDY_enq_serial_put;

  // signals for module outputs
  wire [31 : 0] deq_serial_get, rx_get;
  wire RDY_deq_serial_get, RDY_enq_serial_put, RDY_rx_get, RDY_tx_put;

  // ports of submodule inout_
  wire [31 : 0] inout_$D_IN, inout_$D_OUT;
  wire inout_$CLR, inout_$DEQ, inout_$EMPTY_N, inout_$ENQ, inout_$FULL_N;

  // ports of submodule outin_
  wire [31 : 0] outin_$dD_OUT, outin_$sD_IN;
  wire outin_$dDEQ, outin_$dEMPTY_N, outin_$sENQ, outin_$sFULL_N;

  // action method tx_put
  assign RDY_tx_put = inout_$FULL_N ;

  // actionvalue method rx_get
  assign rx_get = outin_$dD_OUT ;
  assign RDY_rx_get = outin_$dEMPTY_N ;

  // actionvalue method deq_serial_get
  assign deq_serial_get = inout_$D_OUT ;
  assign RDY_deq_serial_get = inout_$EMPTY_N ;

  // action method enq_serial_put
  assign RDY_enq_serial_put = outin_$sFULL_N ;

  // submodule inout_
  FIFO2 #(.width(32'd32), .guarded(32'd1)) inout_(.RST(reset_A),
						  .CLK(CLK_clkinA),
						  .D_IN(inout_$D_IN),
						  .ENQ(inout_$ENQ),
						  .DEQ(inout_$DEQ),
						  .CLR(inout_$CLR),
						  .D_OUT(inout_$D_OUT),
						  .FULL_N(inout_$FULL_N),
						  .EMPTY_N(inout_$EMPTY_N));

  // submodule outin_
  SyncFIFO1 #(.dataWidth(32'd32)) outin_(.sCLK(CLK_clkinB),
					 .dCLK(CLK_clkinA),
					 .sRST(RST_N_reset_B),
					 .sD_IN(outin_$sD_IN),
					 .sENQ(outin_$sENQ),
					 .dDEQ(outin_$dDEQ),
					 .sFULL_N(outin_$sFULL_N),
					 .dEMPTY_N(outin_$dEMPTY_N),
					 .dD_OUT(outin_$dD_OUT));

  // submodule inout_
  assign inout_$D_IN = tx_put ;
  assign inout_$ENQ = EN_tx_put ;
  assign inout_$DEQ = EN_deq_serial_get ;
  assign inout_$CLR = 1'b0 ;

  // submodule outin_
  assign outin_$sD_IN = enq_serial_put ;
  assign outin_$sENQ = EN_enq_serial_put ;
  assign outin_$dDEQ = EN_rx_get ;
endmodule  // mkInterFPGA_LVDS

